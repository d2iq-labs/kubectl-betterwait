# Copyright 2025 D2iQ, Inc. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

name: checks

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  merge_group:
    types:
      - checks_requested

permissions:
  contents: read
  pull-requests: read

jobs:
  unit-test:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install devbox
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true

      - name: Go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run unit tests
        run: devbox run -- make test

      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.7.0
        with:
          test-results: test.json

  lint-go:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install devbox
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true

      - name: Go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Export golang and golangci-lint versions
        id: versions
        run: |
          echo "golangci-lint=$(devbox run -- golangci-lint version --format short)" >>"${GITHUB_OUTPUT}"
          echo "golang=$(devbox run -- go version | grep -o "[[:digit:]]\+.[[:digit:]]\+\(.[[:digit:]]\+\)\?")" >>"${GITHUB_OUTPUT}"

      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          fail_on_error: true
          reporter: github-pr-review
          golangci_lint_version: v${{ steps.versions.outputs.golangci-lint }}
          go_version: v${{ steps.versions.outputs.golang }}

  lint-gha:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: actionlint
        uses: reviewdog/action-actionlint@v1
        with:
          fail_on_error: true
          reporter: github-pr-review

  pre-commit:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install devbox
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true

      - name: Go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up pre-commit cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-3|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit
        run: devbox run -- make pre-commit
        env:
          SKIP: no-commit-to-branch,golangci-lint,actionlint-system
